// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net6SampleProject.Repository;

#nullable disable

namespace Net6SampleProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428123423_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Net6SampleProject.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(918),
                            Name = "Kalemler",
                            UpdatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(919)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(928),
                            Name = "Kitaplar",
                            UpdatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(928)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(930),
                            Name = "Defterler",
                            UpdatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(930)
                        });
                });

            modelBuilder.Entity("Net6SampleProject.Core.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 4, 28, 15, 34, 23, 491, DateTimeKind.Local).AddTicks(4963),
                            Name = "Kalem 1",
                            Price = 100m,
                            ProductFeatureId = 0,
                            Stock = 20,
                            UpdatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(4959)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 4, 28, 15, 34, 23, 491, DateTimeKind.Local).AddTicks(4970),
                            Name = "Kitap 1",
                            Price = 120m,
                            ProductFeatureId = 0,
                            Stock = 22,
                            UpdatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(4970)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 4, 28, 15, 34, 23, 491, DateTimeKind.Local).AddTicks(4972),
                            Name = "Defter 1",
                            Price = 140m,
                            ProductFeatureId = 0,
                            Stock = 24,
                            UpdatedDate = new DateTime(2025, 4, 28, 12, 34, 23, 491, DateTimeKind.Utc).AddTicks(4971)
                        });
                });

            modelBuilder.Entity("Net6SampleProject.Core.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Kırmızı",
                            Height = 100,
                            ProductId = 1,
                            Width = 30
                        },
                        new
                        {
                            Id = 2,
                            Color = "Mavi",
                            Height = 120,
                            ProductId = 2,
                            Width = 40
                        });
                });

            modelBuilder.Entity("Net6SampleProject.Core.Product", b =>
                {
                    b.HasOne("Net6SampleProject.Core.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Net6SampleProject.Core.ProductFeature", b =>
                {
                    b.HasOne("Net6SampleProject.Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Net6SampleProject.Core.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Net6SampleProject.Core.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Net6SampleProject.Core.Product", b =>
                {
                    b.Navigation("ProductFeature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
